services:
  # 애플리케이션 서비스
  app:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-otboo}
      POSTGRES_USER: ${POSTGRES_USER:-otboo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # App secrets / 외부 연동
      KMA_ENCODING_KEY: ${KMA_ENCODING_KEY}
      KMA_DECODING_KEY: ${KMA_DECODING_KEY}
      AUTH_KEY: ${AUTH_KEY}
      KAKAO_API_KEY: ${KAKAO_API_KEY}
      JVM_OPTS: ${JVM_OPTS:--Xmx512m -Xms256m}
      SERVER_PORT: ${APP_INTERNAL_PORT:-8080}   # 컨테이너 내부 포트 = 서버 포트
      # JWT 설정
      JWT_SECRET: ${JWT_SECRET:-otboo-jwt-secret-key-for-development-only-change-in-production}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION:-3600000}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION:-604800000}
      JWT_ISSUER: ${JWT_ISSUER:-otboo}
      # 스토리지 / S3 설정
      STORAGE_TYPE: ${STORAGE_TYPE}
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      # Redis 설정 (로컬 기본값: redis 서비스, 운영은 prod에서 덮어씀)
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      SPRING_DATA_REDIS_SSL_ENABLED: false
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispass}
      # Kafka (로컬 기본값: kafka 서비스, 운영은 prod에서 덮어씀)
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:-kafka:29092}
    ports:
      - "${APP_EXTERNAL_PORT:-8080}:${APP_INTERNAL_PORT:-8080}" # 외부 포트와 내부 포트 매핑
    networks:
      - otboo-network
    restart: unless-stopped

# 네트워크 정의
networks:
  otboo-network:
    driver: bridge
    name: samsamotot-network