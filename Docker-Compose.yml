services:
  # 애플리케이션 서비스
  app:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-otboo}
      POSTGRES_USER: ${POSTGRES_USER:-otboo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-otboo123}
      KMA_ENCODING_KEY: ${KMA_ENCODING_KEY:-your_kma_api_key_here}
      KAKAO_API_KEY: ${KAKAO_API_KEY:-your_kakao_api_key_here}
      JVM_OPTS: ${JVM_OPTS:-}
      SERVER_PORT: ${APP_INTERNAL_PORT:-8080}   # 컨테이너 내부 포트 = 서버 포트
    ports:
      - "${APP_EXTERNAL_PORT:-8080}:${APP_INTERNAL_PORT:-8080}" # 외부 포트와 내부 포트 매핑
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - otboo-network
    restart: unless-stopped

  # PostgreSQL 데이터베이스 서비스
  postgres:
    image: postgres:17-alpine
    env_file:
      - .env
    ports:
      - "${PG_EXTERNAL_PORT:-5433}:${POSTGRES_PORT:-5432}"
    volumes:
      - otboo-postgres:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - otboo-network
    restart: unless-stopped

# 볼륨 정의
volumes:
  otboo-postgres:
    driver: local
    # 예시
    name: samsamotot-postgres

# 네트워크 정의
networks:
  otboo-network:
    driver: bridge
    # 예시
    name: samsamotot-network