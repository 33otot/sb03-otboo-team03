spring:
  application:
    name: Otboo
  profiles:
    active: dev
  devtools:
    restart:
      enabled: false
  servlet:
    multipart:
      maxFileSize: 10MB # 파일 하나의 최대 크기
      maxRequestSize: 30MB # 한 번에 최대 업로드 가능 용량
  cache:
    type: redis
    redis:
      enable-statistics: true
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      repositories:
        enabled: false  # 개발 단계 Redis Repository 비활성화
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP_ID:otboo-group}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

kma:
  base-url: http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0
  alt-url: https://apihub.kma.go.kr/api/typ02/openApi/VilageFcstInfoService_2.0
  service-key: ${AUTH_KEY}

kakao.api:
  base-url: https://dapi.kakao.com
  key: ${KAKAO_API_KEY}

# 비동기 실행 설정
async:
  executors:
    main:
      core-size: 4
      max-size: 8
      queue-capacity: 200
      keep-alive-seconds: 60
    weather:
      core-size: 5
      max-size: 10
      queue-capacity: 1000
      keep-alive-seconds: 60

recommendation:
  cooldown:
    ttl:
      minutes: 30
  rollcount:
    ttl:
      days: 1
  score-threshold: 0.4

# 관리자 계정 초기화 설정
app:
  admin:
    email: ${ADMIN_EMAIL}
    username: ${ADMIN_USERNAME}
    password: ${ADMIN_PASSWORD}

websocket:
  allowed-origins: http://localhost:3000,http://localhost:8080
